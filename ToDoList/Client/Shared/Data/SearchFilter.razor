@using System.Text.RegularExpressions
@typeparam TypeModel

<input class="form-control" @oninput="ChangeValue" placeholder="@Placeholder"/>

@code {
    [Parameter]
    public string Placeholder { get; set; }

    [Parameter]
    public IEnumerable<TypeModel> Data { get; set; }

    [Parameter]
    public IEnumerable<TypeModel> Models { get; set; }

    [Parameter]
    public EventCallback<IEnumerable<TypeModel>> ModelsChanged { get; set; }
    
    [Parameter]
    public string Search { get; set; }

    [Parameter]
    public EventCallback<string> SearchChanged { get; set; }

    [Parameter]
    public Func<TypeModel, string> FilterDirection { get; set; }

    async Task ChangeValue(ChangeEventArgs e)
    {
        string? value = e.Value as string;
        Regex reg = new Regex($".*{value}.*", RegexOptions.IgnoreCase);
        Models = (string.IsNullOrEmpty(value) ? Data : Data.Where(m => reg.IsMatch(FilterDirection(m)))).ToList();
        
        await ModelsChanged.InvokeAsync(Models);
        await SearchChanged.InvokeAsync(value);
    }
}
